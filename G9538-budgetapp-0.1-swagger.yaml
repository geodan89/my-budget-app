openapi: 3.0.0
info:
  version: '0.1'
  title: My-Budget-App
  description: Budget Monitoring App
  termsOfService: http://example.com/terms/
  contact:
    name: Georgiana Dan
    email: geodan89@gmail.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
paths:
  /api/v1/categories:
    get:
      summary: Get Category List
      description: Get **CategoryList**.
      tags:
        - Category
      responses:
        '200':
          description: List of categories
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CategoryList"
  /api/v1/category:
    post:
      summary: Create a new Category.
      description: Create a new **Category**.
      operationId: createNewCategory
      tags:
        - Category
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateOrUpdateCategoryRequestBody"
      responses:
        '201':
          description: Category created.
          headers:
            location:
              description: Location of the created category.
              schema:
                type: string
                format: uri
                example: http://example.com/api/v1/category/{assignedIdValue}
  /api/v1/category/{categoryId}:
    get:
      summary: Get Category by Id
      description: Get a single **Category** by its Id value
      tags:
        - Category
      operationId: getCategoryById
      parameters:
        - $ref: "#/components/parameters/CategoryIdPathParam"
      responses:
        '200':
          description: Found Category by Id.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Category"
        '404':
          description: Category not found.
    put:
      summary: Update Category
      description: Update Category by Id
      tags:
        - Category
      operationId: updateCategory
      parameters:
        - $ref: "#/components/parameters/CategoryIdPathParam"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateOrUpdateCategoryRequestBody"
      responses:
        '200':
          description: Category updated
        '404':
          description: Category not found.
    patch:
      summary: Patch Category
      description: Update initial amount in category.
      operationId: patchCategory
      tags:
        - Category
      parameters:
        - $ref: "#/components/parameters/CategoryIdPathParam"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchCategoryRequestBodyInitialAmount"
      responses:
        '200':
          description: Initial amount updated in Category.
        '404':
          description: Category not found.
    delete:
      summary: Delete Category
      description: Delete Category by Id.
      operationId: deleteCategory
      tags:
        - Category
      parameters:
        - $ref: "#/components/parameters/CategoryIdPathParam"
      responses:
        '204':
          description: Category deleted.
        '404':
          description: Category not found.

  /api/v1/category/{categoryId}/expenses:
    get:
      summary: Get the ExpenseList of a Category using categoryId.
      operationId: getAllExpenses
      tags:
        - Expense
      parameters:
        - $ref: "#/components/parameters/CategoryIdPathParam"
      responses:
        '200':
          description: List of expenses.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExpenseList"
        '404':
          description: Category not found.
  /api/v1/category/{categoryId}/expense:
    post:
      summary: Create new Expense.
      operationId: createNewExpense
      tags:
        - Expense
      parameters:
        - $ref: "#/components/parameters/CategoryIdPathParam"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateOrUpdateExpenseRequestBody"
      responses:
        '201':
          description: Expense created.
          headers:
            location:
              description: Location of the created expense.
              schema:
                type: string
                format: uri
                example: http://example.com/api/v1/category/{categoryId}/expense/{assignedIdValue}
        '404':
          description: Category not found.
  /api/v1/category/{categoryId}/expense/{expenseId}:
    get:
      summary: Get Expense by expenseId and categoryId
      description: Get a single **Expense** by its Id value and the category Id value.
      operationId: getExpenseById
      tags:
        - Expense
      parameters:
        - $ref: "#/components/parameters/CategoryIdPathParam"
        - $ref: "#/components/parameters/ExpenseIdPathParam"
      responses:
        '200':
          description: Found Expense by expenseId and categoryId.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Expense"
        '404':
          description: Category not found or Expense not found.
    put:
      summary: Update Expense by expenseId and categoryId.
      description: Update Expense.
      operationId: updateExpense
      tags:
        - Expense
      parameters:
        - $ref: "#/components/parameters/CategoryIdPathParam"
        - $ref: "#/components/parameters/ExpenseIdPathParam"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateOrUpdateExpenseRequestBody"
      responses:
        '200':
          description: Expense updated.
        '404':
          description: Category not found or Expense not found.
    delete:
      summary: Delete Expense expenseId and categoryId
      description: Delete Expense.
      operationId: deleteExpenseById
      tags:
        - Expense
      parameters:
        - $ref: "#/components/parameters/CategoryIdPathParam"
        - $ref: "#/components/parameters/ExpenseIdPathParam"
      responses:
        '204':
          description: Expense deleted.
        '404':
          description: Category not found or Expense not found.

components:
  parameters:
    CategoryIdPathParam:
      name: categoryId
      in: path
      description: Category Id
      required: true
      schema:
        type: string
    ExpenseIdPathParam:
      name: expenseId
      in: path
      description: Expense Id
      required: true
      schema:
        type: string
  schemas:
    Expense:
      type: object
      description: expense object
      properties:
        expensePrice:
          type: string
        expenseName:
          type: string
        createdDate:
          type: string
        expenseId:
          type: string
    ExpenseList:
      type: array
      description: List of expenses
      items:
        $ref: "#/components/schemas/Expense"
    Category:
      type: object
      description: category object
      properties:
        categoryName:
          type: string
        expenseList:
          $ref: "#/components/schemas/ExpenseList"
        createdDate:
          type: string
        categoryId:
          type: string
        initialAmount:
          type: string
        currentAmount:
          type: string
    CategoryList:
      type: array
      minItems: 0
      maxItems: 100
      description: List of categories
      items:
        $ref: "#/components/schemas/Category"
    CreateOrUpdateCategoryRequestBody:
      type: object
      properties:
        initialAmount:
          type: string
        categoryName:
          type: string
    PatchCategoryRequestBodyInitialAmount:
      type: object
      properties:
        initialAmount:
          type: string
    CreateOrUpdateExpenseRequestBody:
      type: object
      properties:
        expensePrice:
          type: string
        expenseName:
          type: string
# Added by API Auto Mocking Plugin
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/G9538/budgetapp/0.1